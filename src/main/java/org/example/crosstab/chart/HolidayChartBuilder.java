package org.example.crosstab.chart;

import net.sf.dynamicreports.report.builder.chart.BarChartBuilder;
import net.sf.dynamicreports.report.datasource.DRDataSource;
import org.example.data.HolidayDataProvider;
import org.example.model.Holiday;

import java.awt.Color;
import java.time.Month;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static net.sf.dynamicreports.report.builder.DynamicReports.*;

/**
 * –ü–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å –≥—Ä–∞—Ñ–∏–∫–æ–≤ –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤ –æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞—Ö.
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –ø–æ–¥—Å—á–µ—Ç–∞.
 */
public class HolidayChartBuilder {

    /**
     * –°–æ–∑–¥–∞–µ—Ç —Å—Ç–æ–ª–±—á–∞—Ç—É—é –¥–∏–∞–≥—Ä–∞–º–º—É —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤ –ø–æ –º–µ—Å—è—Ü–∞–º –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω—ã.
     * @param holidays –°–ø–∏—Å–æ–∫ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤
     * @return BarChartBuilder
     */
    public static BarChartBuilder createMonthlyHolidaysBarChart(List<Holiday> holidays) {
        DRDataSource chartDataSource = prepareChartData(holidays);

        return cht.barChart()
                .setTitle("")
                .setCategory(field("month", String.class))
                .series(cht.serie(field("count", Integer.class))
                        .setSeries(field("country", String.class)))
                .setValueAxisFormat(cht.axisFormat()
                        .setLabel("Number of Holidays")
                        .setTickLabelMask("#")
                        .setLabelFont(stl.font().setFontSize(8)) // üëà —É–º–µ–Ω—å—à–µ–Ω–∏–µ —à—Ä–∏—Ñ—Ç–∞ –æ—Å–∏ Y
                        .setTickLabelFont(stl.font().setFontSize(8)))
                .setCategoryAxisFormat(cht.axisFormat()
                        .setLabel("Month")
                        .setLabelFont(stl.font().setFontSize(8)) // üëà —É–º–µ–Ω—å—à–µ–Ω–∏–µ —à—Ä–∏—Ñ—Ç–∞ –æ—Å–∏ X
                        .setTickLabelFont(stl.font().setFontSize(8))
                        .setTickLabelRotation(90.0))              // üëà –ø–æ–≤–æ—Ä–æ—Ç –ø–æ–¥–ø–∏—Å–µ–π –º–µ—Å—è—Ü–µ–≤
                .setHeight(250)                              // üëà —É–º–µ–Ω—å—à–µ–Ω–∏–µ –æ–±—â–µ–π –≤—ã—Å–æ—Ç—ã –≥—Ä–∞—Ñ–∏–∫–∞
                .setShowValues(true)
                .setDataSource(chartDataSource)
                .addSeriesColor(Color.RED, Color.BLUE);

    }

    /**
     * –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞ - –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ –ø–æ –º–µ—Å—è—Ü–∞–º.
     * @param holidays –°–ø–∏—Å–æ–∫ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤
     * @return DRDataSource —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è —á–∞—Ä—Ç–∞
     */
    private static DRDataSource prepareChartData(List<Holiday> holidays) {
        Map<String, int[]> monthCounts = HolidayDataProvider.getMonthCountsByCountry(holidays);

        int[] italiaMonths = monthCounts.getOrDefault("Italia", new int[13]);
        int[] moldaviaMonths = monthCounts.getOrDefault("Moldavia", new int[13]);

        DRDataSource chartDataSource = new DRDataSource("month", "count", "country");
        for (int i = 1; i <= 12; i++) {
            int total = italiaMonths[i] + moldaviaMonths[i];
            if (total == 0) {
                continue;
            }

            String monthLabel = i + ". " + Month.of(i).name().substring(0, 1).toUpperCase() + Month.of(i).name().substring(1).toLowerCase();
            if (italiaMonths[i] > 0) {
                chartDataSource.add(monthLabel, italiaMonths[i], "Italia");
            }
            if (moldaviaMonths[i] > 0) {
                chartDataSource.add(monthLabel, moldaviaMonths[i], "Moldavia");
            }
        }
        return chartDataSource;
    }

}